<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on Paradoxical</title>
    <link>https://yathenstianbase.github.io/tags/code/</link>
    <description>Recent content in code on Paradoxical</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://yathenstianbase.github.io/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CocosCreator API [CocosCreator 接口]</title>
      <link>https://yathenstianbase.github.io/posts/cocoscreator/cocoscreator-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yathenstianbase.github.io/posts/cocoscreator/cocoscreator-api/</guid>
      <description>使用Quat进行旋转
碰撞体事件绑定
2D on()绑定 start () { PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeinContact, this); } onBeinContact (a: Collider2D, b: Collider2D) { this.addContact(a); } 从欧拉角转换为四元数
// 三个维度的角度数值 @property(Number) public x: number = 0; @property(Number) public y: number = 0; @property(Number) public z: number = 0; update(deltaTime: number) { this.node.rotation = Quat.fromEuler(new Quat(),this.x,this.y,this.z); this.p +=deltaTime * 1; } 射线检测
点检测需要传入UI坐标上的点: PhysicsSystem2D.instance.testPoint(event.getUILocation()) 自带的tween动画api
旋转 import { tween } from &amp;#39;cc&amp;#39;; @property time = 6; @property angle = 360; start () { tween(this.</description>
    </item>
    
  </channel>
</rss>
