<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSharp on Paradoxical</title>
    <link>https://yathenstianbase.github.io/categories/csharp/</link>
    <description>Recent content in CSharp on Paradoxical</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://yathenstianbase.github.io/categories/csharp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C# Enum type [C#之枚举类型]</title>
      <link>https://yathenstianbase.github.io/posts/csharp/csharp-enum-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yathenstianbase.github.io/posts/csharp/csharp-enum-type/</guid>
      <description>枚举属于值类型，有一组一组的常量和整型值(Int32)组成; C#中使用枚举类型，有利于代码的可读性; 声明格式: 根据&amp;quot;Naming rule violation&amp;quot;说明,枚举命名的头需要建议大写,这可以在visualstudio的提示中看到; enum Name : type { key = &amp;lt;value1&amp;gt;, key = &amp;lt;value2&amp;gt;, key = &amp;lt;value3&amp;gt; } 等号左边相当于变量引用,右边为变量值,type表示这个枚举中的数据类型,VS的提示中包括{byte,sbyte,short,ushort,int,uint,long,ulong}; 默认的类型应该为int,并且数值是按照声明顺序从0依次递增; enum Number : int { zero = 0, // 若自定第一顺位的值，则后续值依次增加1 one, two } // 另一种形式 enum Number{zero,one,two} Enum 提供一些实用的静态方法： 比较枚举的方法; 枚举与字符串互转: 枚举转换为字符串 enum Colors { Red, Green, Blue, Yellow }; Colors.Green.ToString() // 输出&amp;#34;Green&amp;#34;字符串 // 利用Enum的静态方法GetName()与GetNames() // public static string GetName(Type enumType,Object value) // public static string[] GetNames(Type enumType) Enum.</description>
    </item>
    
  </channel>
</rss>
